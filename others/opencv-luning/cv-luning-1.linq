<Query Kind="Statements">
  <NuGetReference>OpenCvSharp4</NuGetReference>
  <NuGetReference>OpenCvSharp4.runtime.win</NuGetReference>
  <Namespace>OpenCvSharp</Namespace>
  <RuntimeVersion>6.0</RuntimeVersion>
</Query>

using Mat src = Cv2.ImRead(@"C:\Users\ZhouJie\Pictures\OpenCVDemo.png");
using Mat gray = src.CvtColor(ColorConversionCodes.RGB2GRAY);
Rect[] tableRects = GetTableRects(gray);

List<TableDesc> all = tableRects
	.Reverse()
	.Select(rect =>
	{
		int rowHeight = DetectTableRowHeight(gray, rect);
		Mat rowHeader = src[rect.Top - rowHeight * 2, rect.Top - rowHeight, rect.Left, rect.Left + rect.Width / 3];
		Mat titleRow = src[rect.Top - rowHeight, rect.Top, rect.Left, rect.Right];
		Mat body = src[rect];
		Mat foot = src[rect.Bottom, rect.Bottom + rowHeight, rect.Left, rect.Right];
		return new TableDesc(rowHeight, rowHeader, titleRow, body, foot);
	})
	.ToList();
	
//all
//	.Select(v => new
//	{
//		Title = Image(v.rowHeader), 
//		Header = Image(v.titleRow),
//		Body = Image(v.body),
//		Foot = Image(v.foot),
//	})
//	.Dump();
	
Dictionary<int, string> matTitleMapping = GetHeaderText(all.Select(x => x.rowHeader).ToList())
	.ToDictionary(x => all.FindIndex(v => v.rowHeader == x.Value), v => v.Key);

all.Select((v, i) =>
{
	return new TableTitledDesc(v.rowHeight, matTitleMapping[i], v.rowHeader, v.titleRow, v.body, v.foot);
})
.ToDictionary(k => k.title, v => new
{
	Header = Image(v.titleRow), 
	Body = Image(v.body), 
	Foot = Image(v.foot), 
})
.Dump();

static double GetMatchingRate(Mat src, Mat template)
{
	using Mat srcGray = src.CvtColor(ColorConversionCodes.RGB2GRAY);
	using Mat srcBin = srcGray.Threshold(120, 255, ThresholdTypes.Binary);
	using Mat templateGray = template.CvtColor(ColorConversionCodes.RGB2GRAY);
	using Mat templateBin = templateGray.Threshold(120, 255, ThresholdTypes.Binary);
	Cv2.MinMaxLoc(srcBin.MatchTemplate(templateBin, TemplateMatchModes.SqDiffNormed), out double min, out double max);
	return min;
}

static Dictionary<string, Mat> GetHeaderText(List<Mat> all)
{
	Dictionary<string, string> knownEntries = new Dictionary<string, string>
	{
		["固定收益率品种"] = "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",
		["海外市场"] = "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",
		["市净率"] = "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",
		["市盈率"] = "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",
		["盈利收益率法"] = "",
	};

	return all.ToDictionary(x => knownEntries
		.Select(kvp => new { kvp.Key, Rate = GetMatchingRate(x, Cv2.ImDecode(Convert.FromBase64String(kvp.Value), ImreadModes.Color)) })
		.MinBy(v => v.Rate)
		.Key, v => v);
}

static int DetectTableRowHeight(Mat gray, Rect rect)
{
	using Mat roi = gray[rect.Top, rect.Bottom, rect.Left, rect.Left + 150];
	using Mat binary = roi.Threshold(90, 255, ThresholdTypes.BinaryInv);
	using Mat dilated = new();
	using (Mat ones = Cv2.GetStructuringElement(MorphShapes.Rect, new Size(25, 10)))
	{
		Cv2.Dilate(binary, dilated, ones);
	}
	Rect[] rects = dilated.FindContoursAsArray(RetrievalModes.List, ContourApproximationModes.ApproxSimple)
		.Select(x => Cv2.BoundingRect(x))
		.Where(x => x.Width > 30)
		.ToArray();
	double average = rects
		.Zip(rects.Skip(1))
		.Select(x => Math.Abs((x.First.Bottom + x.First.Top) / 2 - (x.Second.Bottom + x.Second.Top) / 2))
		.Average();

	return (int)Math.Round(average);
}

static Rect[] GetTableRects(Mat gray)
{
	using Mat res = gray.Threshold(220, 255, ThresholdTypes.BinaryInv);
	using Mat dilated = new();
	using (Mat ones = Cv2.GetStructuringElement(MorphShapes.Rect, new Size(5, 1)))
	{
		Cv2.Dilate(res, dilated, ones);
	}
	// Image(dilated).Dump();

	Point[][] contours = dilated.FindContoursAsArray(RetrievalModes.List, ContourApproximationModes.ApproxSimple);
	Rect[] tableRects = contours.Select(x => Cv2.BoundingRect(x))
		.Where(x => x.Width > 400 && x.Height > 100)
		.ToArray();
	return tableRects;
}

static object Image(Mat mat) => Util.Image(mat.ToBytes(), Util.ScaleMode.Unscaled);
record TableDesc(int rowHeight, Mat rowHeader, Mat titleRow, Mat body, Mat foot);
record TableTitledDesc (int rowHeight, string title, Mat rowHeader, Mat titleRow, Mat body, Mat foot);